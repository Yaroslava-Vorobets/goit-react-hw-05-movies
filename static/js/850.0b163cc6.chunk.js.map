{"version":3,"file":"static/js/850.0b163cc6.chunk.js","mappings":"qQAGaA,EAAOC,EAAAA,GAAAA,KAAH,6MAOJC,EAAaD,EAAAA,GAAAA,GAAH,wFAMVE,EAAiBF,EAAAA,GAAAA,GAAH,uFAMbG,EAAaH,EAAAA,GAAAA,OAAH,mXAmBXI,EAAOJ,EAAAA,GAAAA,IAAH,oRAcJK,GAJQL,EAAAA,GAAAA,IAAH,kDAICA,EAAAA,GAAAA,IAAF,iOAaJM,EAAQN,EAAAA,GAAAA,IAAH,uP,SCTlB,EApDyB,SAAfO,IAAsB,IAAD,IAC3B,GAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAYjB,IATAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBL,GACXM,MAAK,SAACR,GACHC,EAAWD,EACd,GAGR,GAAE,CAACE,KAECJ,EACD,OAAO,KAGX,IAAMW,EAAQ,oBAAGL,EAASM,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAEzC,OACI,UAACrB,EAAD,YACI,UAAC,KAAD,CAAMsB,GAAIH,EAAV,eAAqB,SAACf,EAAD,sBAArB,QACA,UAACC,EAAD,YAEI,SAACC,EAAD,WAAM,SAACC,EAAD,CAAOgB,IAAKb,EAAQc,YAAR,0CACqBd,EAAQc,aAD7B,mCAEwBC,IAAKf,EAAQgB,oBAEvD,UAACpB,EAAD,YACI,SAACJ,EAAD,UAAaQ,EAAQgB,kBACrB,UAACvB,EAAD,0BAA6BO,EAAQiB,eACrC,SAACxB,EAAD,wBACI,uBAAIO,EAAQkB,YAChB,SAACzB,EAAD,2BAXGO,EAAQmB,KAenB,4BACI,oDACI,SAAC,KAAD,CAAMP,GAAI,OAAQF,MAAO,CAACC,KAAKP,EAASM,MAAMC,MAA9C,UAAqD,oCACrD,SAAC,KAAD,CAAMC,GAAI,UAAWF,MAAO,CAACC,KAAKP,EAASM,MAAMC,MAAjD,UAAwD,0CAE1D,SAAC,KAAD,SAMjB,C","sources":["pages/MovieDetailsFolder/MovieDetails.Styled.js","pages/MovieDetailsFolder/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const Main = styled.main`   \n    padding: 20px;\n    border-radius: 2px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const MovieTitle = styled.h1`\n    padding: 4px;   \n    font-size:35px;\n    color: #182351;\n`;\n\nexport const SecondaryTitle = styled.h2`\n    padding: 4px;  \n    font-size:25px;\n    color: #182351;\n`;\n\n export const BackButton = styled.button`\n  display: inline-block;\n  width: 80px;\n  height: 48px;\n  margin-top: 15px;\n  border: 0;\n  border-radius: 4px;\n  background-color: #3f51b5;\n  background-position: center; \n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  \n  &:hover {\n  color: white;\n  background-color: orangered;\n \n}`\n\nexport const Card = styled.div`\n    display:flex;\n    justify-content: space-around;\n    margin: 15px;\n    padding: 20px;\n    border-radius: 2px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Cover = styled.div`\n  margin-left: 35px;\n  \n`;\nexport const Wrap= styled.div`\n  width: 50%;\n  border-radius: 10px;\n  height: 400px;\n \n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }`\n\n\nexport const Image = styled.img`\n  width: 420px;\n  border-radius: 10px;\n  height: 400px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;","import {Link,Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { getMoviedetails } from '../../Api';\nimport { useState, useEffect } from 'react';\nimport {Main, Card, Wrap, BackButton, Image, MovieTitle, SecondaryTitle } from './MovieDetails.Styled';\n\n\n\n    const MovieDetails = () => {\n    const [results, setResults] = useState({});\n    const { movieId } = useParams();\n    const location = useLocation();\n    \n\n    useEffect(() => {\n        getMoviedetails(movieId)\n            .then((results) => {\n                setResults(results)\n            })      \n   \n  \n    }, [movieId]);    \n    \n    if (!MovieDetails) {\n        return null\n    }\n\n    const BackLink = location.state?.from ?? '/movies';\n    //  const genres = [];\n    return (\n        <Main>  \n            <Link to={BackLink}> <BackButton>go back</BackButton> </Link>        \n            <Card key={results.id}>          \n              \n                <Wrap><Image src={results.poster_path ?\n                    `https://image.tmdb.org/t/p/w500/${results.poster_path}`\n                    : `https://image.tmdb.org/t/p/w500/`} alt={results.original_title} />\n                </Wrap>\n                <Wrap>\n                    <MovieTitle>{results.original_title}</MovieTitle>\n                    <SecondaryTitle>User score: {results.vote_count}</SecondaryTitle>\n                    <SecondaryTitle>Overview</SecondaryTitle>\n                        <p>{results.overview }</p>\n                    <SecondaryTitle>Genres:</SecondaryTitle> \n                    {/* {results.genres.map(genres => (<p>{genres.name}</p>))}                   */}\n                </Wrap>      \n            </Card>\n            <div>\n                <ul> Aditional information         \n                    <Link to={'Cast'} state={{from:location.state.from}}><li>Cast</li></Link>  \n                    <Link to={'Reviews'} state={{from:location.state.from}}><li>Reviews</li></Link>\n                </ul>\n                  <Outlet />\n            </div>\n          \n        </Main>\n\n    )\n}\n\nexport default MovieDetails"],"names":["Main","styled","MovieTitle","SecondaryTitle","BackButton","Card","Wrap","Image","MovieDetails","useState","results","setResults","movieId","useParams","location","useLocation","useEffect","getMoviedetails","then","BackLink","state","from","to","src","poster_path","alt","original_title","vote_count","overview","id"],"sourceRoot":""}
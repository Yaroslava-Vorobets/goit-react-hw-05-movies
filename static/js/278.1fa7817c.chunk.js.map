{"version":3,"file":"static/js/278.1fa7817c.chunk.js","mappings":"sIACO,SAAUA,IACjB,OAAQC,MAAM,0FACRC,MAAK,SAAAC,GACD,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAJ,8CACvB,GACR,CAEM,SAASC,EAAUC,GACxB,OAAOT,MAAM,qIAAD,OAAsIS,IAEhJR,MAAK,SAAAC,GACC,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAJ,sCACvB,GACR,CAEM,SAASG,EAAgBC,GAC9B,OAAOX,MAAM,sCAAD,OAAuCW,EAAvC,8CACVV,MAAK,SAAAC,GACC,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAJ,sCACvB,GACR,CAEM,SAASK,EAAaD,GAC3B,OAAOX,MAAM,sCAAD,OAAuCW,EAAvC,qEACTV,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACCD,EAAIE,OAERC,QAAQC,OAAO,IAAIC,MAAJ,sCACzB,GAEA,CAEM,SAASM,EAAWF,GACzB,OAAOX,MAAM,sCAAD,OAAuCW,EAAvC,sDACRV,MAAK,SAAAC,GACD,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAJ,sCACvB,GAER,C,6RClDYO,EAAQC,EAAAA,GAAAA,IAAH,uPAaLC,EAAOD,EAAAA,GAAAA,GAAH,2QAUJE,EAAOF,EAAAA,GAAAA,GAAH,mOASJG,EAAOH,EAAAA,GAAAA,EAAH,uF,kHCYjB,UAtCc,WACV,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQV,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAA8BQ,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAgBC,OAdDC,EAAAA,EAAAA,YAAU,WACVD,GAAW,IACRZ,EAAAA,EAAAA,IAAaD,GACXV,MAAK,YAAa,IAAXmB,EAAU,EAAVA,KACDC,EAAQD,EACX,IACHM,OAAM,SAAAC,GACHC,EAAAA,GAAAA,MAAY,sCACP,IACRC,QAASL,GAAW,GAExB,GAAC,CAACb,KAIC,gCACAS,IAAQ,SAAE,KAAF,UACHA,EAAKU,KAAI,YAA4D,IAAzDC,EAAwD,EAAxDA,aAAcC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACjD,OACI,UAAE,KAAF,YACI,SAAE,KAAF,CAASC,IAAKL,EAAY,0CACcA,GADd,mCAEeM,IAAKJ,KAC9C,SAAC,KAAD,UAAOC,KACP,UAAC,KAAD,yBAAkBC,OALVH,EAOX,MAEVT,IAAW,SAAC,IAAD,MAGrB,C","sources":["Api.js","components/CastFolder/Cast.Styled.js","components/CastFolder/Cast.jsx"],"sourcesContent":["\nexport function  getTrendingMovies(){\nreturn  fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=ebb8165ea943e33fa7a8dadcac1ff998` )\n     .then(res => {\n          if (res.ok) {\n            return res.json()\n          };\n          return Promise.reject(new Error(`for this query trending nothing was found `))\n        })\n} \n\nexport function getMovies(filterQuery) {\n  return fetch(`http://api.themoviedb.org/3/search/movie?api_key=ebb8165ea943e33fa7a8dadcac1ff998&include_adult=false&language=en-US&page=1&query=${filterQuery}`)\n \n   .then(res => {\n          if (res.ok) {\n            return res.json()\n          };\n          return Promise.reject(new Error(`for this query  nothing was found `))\n        })\n}\n\nexport function getMoviedetails(movieId) {\n  return fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=ebb8165ea943e33fa7a8dadcac1ff998`) \n   .then(res => {\n          if (res.ok) {\n            return res.json()\n          };\n          return Promise.reject(new Error(`for this query  nothing was found `))\n        })\n}\n\nexport function getCastMovie(movieId) {\n  return fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=ebb8165ea943e33fa7a8dadcac1ff998&language=en-US`)\n    .then(res => {\n      if (res.ok) {\n        return res.json()\n      };\n    return Promise.reject(new Error(`for this query  nothing was found `)) \n})\n\n}\n\nexport function getReviews(movieId) {\n  return fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=ebb8165ea943e33fa7a8dadcac1ff998`)\n     .then(res => {\n          if (res.ok) {\n            return res.json()         \n          };\n          return Promise.reject(new Error(`for this query  nothing was found `))\n        })\n\n}\n\n\n\n\n\n\n\n","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 200px;\n  border-radius: 10px;\n  height: 200px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const List = styled.ul`\n    display: flex;\n    flex-flow: row wrap;\n    margin: 15px;\n    padding: 20px;\n    border-radius: 2px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Item = styled.li`\n    \n    margin: 15px;\n    padding: 20px;\n    border-radius: 2px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Info = styled.p`\n    padding: 4px;   \n    font-size:15px;\n    color: #182351;\n`;\n\n","import { useState, useEffect } from 'react';\nimport {useParams} from \"react-router-dom\";\nimport { getCastMovie } from 'Api';\nimport { Loader } from 'components/Loader/Loader.jsx'\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { List, Image, Info, Item } from '../CastFolder/Cast.Styled'\n\n const Cast = () => {\n    const [cast, setCast] = useState([]);\n    const { movieId } = useParams();\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => { \n    setLoading(true);  \n       getCastMovie(movieId)\n        .then(({cast}) => {\n               setCast(cast)        \n           })\n        .catch(error => {\n            toast.error('Something went wrong! Please retry!');\n                })\n        .finally( setLoading(false))\n       \n    },[movieId])\n\n    \n     return (\n        <>\n       {cast && < List> \n            {cast.map(({ profile_path, id, original_title, name, character }) => {\n                return (\n                    < Item key={id}>\n                        < Image  src={profile_path\n                            ?`https://image.tmdb.org/t/p/w500/${profile_path}`\n                            :`https://image.tmdb.org/t/p/w500/`} alt={original_title} />\n                        <Info>{name}</Info>\n                        <Info>character: {character}</Info>\n                    </ Item>);   \n                    })}         \n        </ List>}\n         { loading && <Loader /> }\n     </>\n    )\n}\n\nexport default Cast"],"names":["getTrendingMovies","fetch","then","res","ok","json","Promise","reject","Error","getMovies","filterQuery","getMoviedetails","movieId","getCastMovie","getReviews","Image","styled","List","Item","Info","useState","cast","setCast","useParams","loading","setLoading","useEffect","catch","error","toast","finally","map","profile_path","id","original_title","name","character","src","alt"],"sourceRoot":""}
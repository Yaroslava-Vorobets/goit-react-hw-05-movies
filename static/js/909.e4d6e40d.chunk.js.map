{"version":3,"file":"static/js/909.e4d6e40d.chunk.js","mappings":"sIACO,SAAUA,IACjB,OAAQC,MAAM,0FACRC,MAAK,SAAAC,GACD,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAJ,8CACvB,GACR,CAEM,SAASC,EAAUC,GACxB,OAAOT,MAAM,qIAAD,OAAsIS,IAEhJR,MAAK,SAAAC,GACC,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAJ,sCACvB,GACR,CAEM,SAASG,EAAgBC,GAC9B,OAAOX,MAAM,sCAAD,OAAuCW,EAAvC,8CACVV,MAAK,SAAAC,GACC,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAJ,sCACvB,GACR,CAEM,SAASK,EAAaD,GAC3B,OAAOX,MAAM,sCAAD,OAAuCW,EAAvC,qEACTV,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACCD,EAAIE,OAERC,QAAQC,OAAO,IAAIC,MAAJ,sCACzB,GAEA,CAEM,SAASM,EAAWF,GACzB,OAAOX,MAAM,sCAAD,OAAuCW,EAAvC,sDACRV,MAAK,SAAAC,GACD,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAJ,sCACvB,GAER,C,8MCrBD,UA1BgB,WACd,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACOL,GAAWM,EAAAA,EAAAA,MAAXN,QAWP,OATAO,EAAAA,EAAAA,YAAU,YACRL,EAAAA,EAAAA,IAAWF,GACRV,MAAK,YAAgB,IAAdkB,EAAa,EAAbA,QACNH,EAAWG,EACd,GACF,GAAE,CAACR,KAKF,wBACGI,EAAQK,OAAS,EAChBL,EAAQM,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3B,OACA,2BACE,oCAAYD,MACV,qCAAaC,OAFRF,EAIV,IAPA,4CASN,C","sources":["Api.js","components/ReviewsFolder/Reviews.jsx"],"sourcesContent":["\nexport function  getTrendingMovies(){\nreturn  fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=ebb8165ea943e33fa7a8dadcac1ff998` )\n     .then(res => {\n          if (res.ok) {\n            return res.json()\n          };\n          return Promise.reject(new Error(`for this query trending nothing was found `))\n        })\n} \n\nexport function getMovies(filterQuery) {\n  return fetch(`http://api.themoviedb.org/3/search/movie?api_key=ebb8165ea943e33fa7a8dadcac1ff998&include_adult=false&language=en-US&page=1&query=${filterQuery}`)\n \n   .then(res => {\n          if (res.ok) {\n            return res.json()\n          };\n          return Promise.reject(new Error(`for this query  nothing was found `))\n        })\n}\n\nexport function getMoviedetails(movieId) {\n  return fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=ebb8165ea943e33fa7a8dadcac1ff998`) \n   .then(res => {\n          if (res.ok) {\n            return res.json()\n          };\n          return Promise.reject(new Error(`for this query  nothing was found `))\n        })\n}\n\nexport function getCastMovie(movieId) {\n  return fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=ebb8165ea943e33fa7a8dadcac1ff998&language=en-US`)\n    .then(res => {\n      if (res.ok) {\n        return res.json()\n      };\n    return Promise.reject(new Error(`for this query  nothing was found `)) \n})\n\n}\n\nexport function getReviews(movieId) {\n  return fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=ebb8165ea943e33fa7a8dadcac1ff998`)\n     .then(res => {\n          if (res.ok) {\n            return res.json()         \n          };\n          return Promise.reject(new Error(`for this query  nothing was found `))\n        })\n\n}\n\n\n\n\n\n\n\n","import {useState, useEffect } from 'react';\nimport {useParams} from \"react-router-dom\";\nimport { getReviews } from 'Api';\n// import { toast } from 'react-toastify';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const {movieId} = useParams ();\n\n  useEffect(() => {\n    getReviews(movieId)\n      .then(({results}) => {\n        setReviews(results)       \n    })\n  }, [movieId])\n  \n \n \n  return (\n    <ul>\n      {reviews.length > 0 ?\n        reviews.map(({ id, author, content }) => {\n        return (\n        <li key={id}>\n          <p>author: {author}</p>\n            <p>content: {content}</p>            \n        </li>)\n      }):  `We don't have any reviews for this movie`}    \n   </ul>)\n};\n\nexport default  Reviews\n"],"names":["getTrendingMovies","fetch","then","res","ok","json","Promise","reject","Error","getMovies","filterQuery","getMoviedetails","movieId","getCastMovie","getReviews","useState","reviews","setReviews","useParams","useEffect","results","length","map","id","author","content"],"sourceRoot":""}